import { InferType } from 'yup';
export declare const SkillDeliveryCPAManagementYupSchema: import("yup/lib/object").OptionalObjectSchema<{
    abandonMessagePath: import("yup/lib/string").RequiredStringSchema<string, import("yup/lib/types").AnyObject>;
    abandonMsgMode: import("yup/lib/number").RequiredNumberSchema<number, import("yup/lib/types").AnyObject>;
    abandonTimeout: import("yup/lib/number").RequiredNumberSchema<number, import("yup/lib/types").AnyObject>;
    agentNoResponseSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    agentOverrideOptionAnsweringMachine: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    agentOverrideOptionBadNumber: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    agentOverrideOptionFax: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    agentResponseUtteranceMinimumSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    agentVoiceThreshold: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    ansMachineDetMode: import("yup/lib/number").RequiredNumberSchema<number, import("yup/lib/types").AnyObject>;
    ansMachineMsg: import("yup/lib/string").RequiredStringSchema<string, import("yup/lib/types").AnyObject>;
    ansMachineOverrideSeconds: import("yup/lib/number").RequiredNumberSchema<number, import("yup/lib/types").AnyObject>;
    customerLiveSilenceSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    customerVoiceThreshold: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    enableCPALogging: import("yup").BooleanSchema<boolean, import("yup/lib/types").AnyObject, boolean>;
    exceptions: import("yup/lib/array").RequiredArraySchema<import("yup").AnySchema<any, any, any>, import("yup/lib/types").AnyObject, any[]>;
    machineEndSilenceSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    machineEndTimeoutSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    machineMinimumWithAgentSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    machineMinimumWithoutAgentSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    preConnectCPAEnabled: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    preConnectCPARecording: import("yup").BooleanSchema<boolean, import("yup/lib/types").AnyObject, boolean>;
    treatProgressAsRinging: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    utteranceMinimumSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
}, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
    abandonMessagePath: import("yup/lib/string").RequiredStringSchema<string, import("yup/lib/types").AnyObject>;
    abandonMsgMode: import("yup/lib/number").RequiredNumberSchema<number, import("yup/lib/types").AnyObject>;
    abandonTimeout: import("yup/lib/number").RequiredNumberSchema<number, import("yup/lib/types").AnyObject>;
    agentNoResponseSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    agentOverrideOptionAnsweringMachine: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    agentOverrideOptionBadNumber: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    agentOverrideOptionFax: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    agentResponseUtteranceMinimumSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    agentVoiceThreshold: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    ansMachineDetMode: import("yup/lib/number").RequiredNumberSchema<number, import("yup/lib/types").AnyObject>;
    ansMachineMsg: import("yup/lib/string").RequiredStringSchema<string, import("yup/lib/types").AnyObject>;
    ansMachineOverrideSeconds: import("yup/lib/number").RequiredNumberSchema<number, import("yup/lib/types").AnyObject>;
    customerLiveSilenceSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    customerVoiceThreshold: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    enableCPALogging: import("yup").BooleanSchema<boolean, import("yup/lib/types").AnyObject, boolean>;
    exceptions: import("yup/lib/array").RequiredArraySchema<import("yup").AnySchema<any, any, any>, import("yup/lib/types").AnyObject, any[]>;
    machineEndSilenceSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    machineEndTimeoutSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    machineMinimumWithAgentSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    machineMinimumWithoutAgentSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
    preConnectCPAEnabled: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    preConnectCPARecording: import("yup").BooleanSchema<boolean, import("yup/lib/types").AnyObject, boolean>;
    treatProgressAsRinging: import("yup/lib/boolean").RequiredBooleanSchema<boolean, import("yup/lib/types").AnyObject>;
    utteranceMinimumSeconds: import("yup").NumberSchema<number, import("yup/lib/types").AnyObject, number>;
}>>;
export declare type SkillCPAManagementParameters = InferType<typeof SkillDeliveryCPAManagementYupSchema>;
